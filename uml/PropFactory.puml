@startuml
'https://plantuml.com/class-diagram

class AbstractProp {
    + AbstractProp(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + func(HeroAircraft heroAircraft):void
}

class BloodProp {
    + BloodProp(int locationX, int locationY, int speedX, int speedY)
    + func(HeroAircraft heroAircraft):void
}
AbstractProp <|-- BloodProp

class BombProp {
    + BombProp(int locationX, int locationY, int speedX, int speedY)
    + func(HeroAircraft heroAircraft):void
}
AbstractProp <|-- BombProp

class BulletProp {
    + BulletProp(int locationX, int locationY, int speedX, int speedY)
    + func(HeroAircraft heroAircraft):void
}
AbstractProp <|-- BulletProp

interface PropFactory {
    + {abstract} creatProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}

class BloodPropFactory {
    + creatProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}
PropFactory <|.. BloodPropFactory
BloodPropFactory ..> BloodProp

class BombPropFactory {
    + creatProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}
PropFactory <|.. BombPropFactory
BombPropFactory ..> BombProp

class BulletPropFactory {
    + creatProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}
PropFactory <|.. BulletPropFactory
BulletPropFactory ..> BulletProp

class EliteEneny {}
EliteEneny ..> AbstractProp
EliteEneny ..> PropFactory

@enduml